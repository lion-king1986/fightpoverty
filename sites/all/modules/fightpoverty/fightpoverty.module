<?php
    /**
     * Implements hook_menu().
     */
    function fightpoverty_menu() {
     
    // Ajax Callback. Returns telephone number for current region.
    $items['fightpoverty'] = array(
    'title' => 'fightpoverty title',
    'page callback' => 'fightpoverty_callback',
    'access arguments' => array('access content'),
    'access callback' => 'user_access',
    'type' => MENU_CALLBACK,
    );
     
    return $items;
    }
    
    function fightpoverty_callback(){
        global $user;
        print_r($_POST);
        /*
        $reset_pos_sorting_field = variable_get('reset_pos_sorting_field');
        $reset_pos_days_to_refresh = variable_get('reset_pos_days_to_refresh');
        
        db_update('node')
            ->fields(array($reset_pos_sorting_field => (int) time()))
            ->condition('nid', (int)$_GET['nid'])
            ->condition('uid', (int)$user->uid)
            ->condition($reset_pos_sorting_field, (int)strtotime("-" . $reset_pos_days_to_refresh .
                    " days"),'<=')//changed field if sorting changed
            ->execute();
        
        drupal_exit();*/
    }

    function fightpoverty_form_alter(&$form, &$form_state,$form_id) {
        switch ($form_id) {
            case 'user_register_form':
                $form['#submit'][] = 'fightpoverty_user_register_submit';
                break;
        }
    }

    function fightpoverty_user_register_submit($form, &$form_state) {
        $form_state['redirect'] = url('node/39');//redirects to choose project page
    }
function choose_proj_fp($project_id) {
    return drupal_get_form('ajax_example_simplest1', $project_id);
}

function ajax_example_simplest1($form, &$form_state, $project_id ) {
	$form = array();
	$form['bid'] = array('#type' => 'hidden', '#value' => $project_id);
	$form['submit_link'] = array(
		'#type' => 'link',
		'#title' => t('Choose project'),
		'#href' => 'fightpoverty',
		'#id' => 'ajax_link' . $project_id,
		'#attributes' => array(
			'class' => array(
				'use-ajax',
			),
		),
		'#ajax' => array(
			'callback' => 'ajax_example_simplest_callback3',
			'wrapper' => 'ajax_link' . $project_id,
			'method' => 'html',
			'effect' => 'fade'
		),
	);

	return $form;
}

/*
function ajax_example_simplest1($form, &$form_state, $project_id ) {
    $form = array();
    $form['changethis'] = array(
        '#type' => 'select',
        '#options' => array(
            'one' => 'one',
            'two' => 'two',
            'three' => 'three',
        ),
        '#ajax' => array(
            'callback' => 'ajax_example_simplest_callback1',
            'wrapper' => 'replace_textfield_div',
        ),
    );

	$form['bid'] = array('#type' => 'hidden', '#value' => $project_id);

    // This entire form element will be replaced with an updated value.
    $form['replace_textfield'] = array(
        '#type' => 'textfield',
        '#title' => t("The default value will be changed"),
        '#description' => t("Say something about why you chose") . "'" .
            (!empty($form_state['values']['changethis'])
                ? $form_state['values']['changethis'] : t("Not changed yet")) . "'",
        '#prefix' => '<div id="replace_textfield_div">',
        '#suffix' => '</div>',
    );
    return $form;
}
*/

function ajax_example_simplest_callback3($form, $form_state, $type = 'ajax') {
	echo "erwerwr"; exit();
    // The form has already been submitted and updated. We can return the replaced
    // item as it is.
    //return $form['replace_textfield'];
	if ($type == 'ajax') {
		$output = t("Already choosed");
		$commands = array();
		// See ajax_example_advanced.inc for more details on the available commands
		// and how to use them.
		$commands[] = ajax_command_append('#ajax_link', $output);
		$page = array('#type' => 'ajax', '#commands' => $commands);
		ajax_deliver($page);
	}
	else {
		$output = t("Not choose");
		return $output;
	}
}
?>