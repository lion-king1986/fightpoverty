<?php
    /**
     * Implements hook_menu().
     */
    function fightpoverty_menu() {

        $items['fightpoverty/'] = array(
            'title' => 'fightpoverty title',
            'page callback' => 'chooseproj_callback',
            'access arguments' => array('access content'),
            /*'page arguments' => array(1),*/
            'access callback' => 'user_access',
            'type' => MENU_CALLBACK,
        );

        $items['fightpovertychooseproj/%'] = array(
            'title' => 'fightpoverty title',
            'page callback' => 'chooseproj_callback',
            'access arguments' => array('access content'),
            'page arguments' => array(1),
            'access callback' => 'user_access',
            'type' => MENU_CALLBACK,
        );

    return $items;
    }
    function test_ajax_link_response($type = 'ajax') {
        if ($type == 'ajax') {
            $output = t("This is some content delivered via AJAX");
            $commands = array();
            // See ajax_example_advanced.inc for more details on the available commands
            // and how to use them.
            $commands[] = ajax_command_append('#myDiv', $output);
            $page = array('#type' => 'ajax', '#commands' => $commands);
            ajax_deliver($page);
        }
        else {
            $output = t("This is some content delivered via a page load.");
            return $output;
        }
    }
    function chooseproj_callback($type, $proj_id){
        global $user;
		$commands = array();

		$query = db_select('node', 'n');
		$query->fields('n', array('nid', 'title'));
		$query->condition('n.type', 'project', '=');
		$result = $query->execute();
		while($row = $result->fetchAssoc()) {
			//$test[] = $row['nid'];
			//$commands[] = ajax_command_html( '#ajax_link' . $row['nid'], 'Choose project' );
			$commands[] = ajax_command_css( "#div" . $row['nid'], array('display' => 'none') );
			$commands[] = ajax_command_css( '#ajax_link' . $row['nid'], array('display' => 'block') );
			//$commands[] = ajax_command_css( null, array('display', 'block') );
		}

        $account = user_load( $user->uid ); // Loading account
        $edit = array(
            'field_choosed_project' => array(
                'und' => array(
                    0 => array(
                        'value' => $proj_id,
                    ),
                ),
            ),
        );

        if( user_save($account, $edit) ){

            $output = t("You have chosen this project");

            // See ajax_example_advanced.inc for more details on the available commands
            // and how to use them.
			//$commands[] = ajax_command_alert( $test );

			//$commands[] = ajax_command_html( '#ajax_link' . $proj_id, $output );
			$commands[] = ajax_command_css( '#ajax_link' . $proj_id, array('display' => 'none') );
			//$commands[] = ajax_command_css( null, array('display', 'none') );
			$commands[] = ajax_command_css( "#div" . $proj_id, array('display' => 'block') );
            $page = array('#type' => 'ajax', '#commands' => $commands);
            ajax_deliver($page);

        }


        /*
        $reset_pos_sorting_field = variable_get('reset_pos_sorting_field');
        $reset_pos_days_to_refresh = variable_get('reset_pos_days_to_refresh');
        
        db_update('node')
            ->fields(array($reset_pos_sorting_field => (int) time()))
            ->condition('nid', (int)$_GET['nid'])
            ->condition('uid', (int)$user->uid)
            ->condition($reset_pos_sorting_field, (int)strtotime("-" . $reset_pos_days_to_refresh .
                    " days"),'<=')//changed field if sorting changed
            ->execute();
        
        drupal_exit();*/
    }

    function fightpoverty_form_alter(&$form, &$form_state,$form_id) {
        switch ($form_id) {
            case 'user_register_form':
                $form['#submit'][] = 'fightpoverty_user_register_submit';
                break;
        }
    }

    function fightpoverty_user_register_submit($form, &$form_state) {
        $form_state['redirect'] = url('node/43');//redirects to choose project page
    }
    function choose_proj_fp($project_id, $display) {
        return drupal_get_form('ajax_chooseproj_print_form', $project_id, $display);
    }

    function ajax_chooseproj_print_form($form, &$form_state, $project_id, $display ) {
        $form = array();

        $form['submit_link'] = array(
            '#type' => 'link',
            '#title' => t('Choose project'),
            '#href' => 'fightpovertychooseproj/nojs/' . $project_id,
            '#id' => 'ajax_link' . $project_id,
            '#attributes' => array(
                'class' => array(
                    'use-ajax',
                ),
				'style' => array($display),
            ),
            '#ajax' => array(
                'wrapper' => 'ajax_link' . $project_id,
                'method' => 'html',
                'effect' => 'fade'
            ),
        );

        return $form;
    }

	function fightpoverty_views_pre_execute(view $view)  {
		if ($view->name == 'choosed_project') {
			//var_dump($view->build_info['query']);
			$query = $view->build_info['query'];

			$query->leftJoin('node', 'nd', '(field_data_field_choosed_project.field_choosed_project_value = nd.nid)');


			$view->build_info['count_query'] = $query->countQuery();
			//var_dump($view->build_info['count_query']);
		}
	}

?>